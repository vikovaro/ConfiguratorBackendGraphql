version: '3.8'

services:
    db:
        image: postgres:16
        container_name: configurator_db
        environment:
            POSTGRES_USER: $DB_USER
            POSTGRES_PASSWORD: $DB_PASSWORD
            POSTGRES_DB: $DB_NAME
        ports:
            - '5433:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        container_name: configurator_redis
        environment:
            REDIS_PASSWORD: $REDIS_PASSWORD
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        command: redis-server --requirepass password
        healthcheck:
            test: ['CMD', 'redis-cli', '-a', 'password', 'ping']

    app:
        build: .
        ports:
            - '3010:3001'
            - '9091:9091'
        environment:
            - NODE_ENV=production
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    prometheus:
        image: prom/prometheus
        container_name: configurator_prometheus
        ports:
            - '9090:9090'
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        depends_on:
            - app

    grafana:
        image: grafana/grafana
        container_name: configurator_grafana
        ports:
            - '3009:3000'
        volumes:
            - grafana_data:/var/lib/grafana
        depends_on:
            - prometheus

volumes:
    postgres_data:
    redis_data:
    grafana_data:
